services:
  # üóÑÔ∏è PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: expenses-db
    environment:
      POSTGRES_USER: expenses_user
      POSTGRES_PASSWORD: expenses_pass
      POSTGRES_DB: expenses_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "expenses_user", "-d", "expenses_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - expenses-network
    restart: unless-stopped

  # üî¥ Redis for Celery
  redis:
    image: redis:7-alpine
    container_name: expenses-redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - expenses-network
    restart: unless-stopped

  # ü§ñ Bot Service (FastAPI Backend) - No health check
  bot-service:
    build: 
      context: ./bot-service
      dockerfile: Dockerfile
    container_name: bot-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql+asyncpg://expenses_user:expenses_pass@postgres:5432/expenses_db
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - MODEL_NAME=${MODEL_NAME:-llama3-8b-8192}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    ports:
      - "8001:8000"
    volumes:
      - ./bot-service:/app
    networks:
      - expenses-network
    restart: unless-stopped

  # üîÑ Celery Worker
  celery-worker:
    build:
      context: ./bot-service
      dockerfile: celery.dockerfile
    container_name: celery-worker
    depends_on:
      - postgres
      - redis
      - bot-service
    environment:
      - DATABASE_URL=postgresql+asyncpg://expenses_user:expenses_pass@postgres:5432/expenses_db
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
      - MODEL_NAME=${MODEL_NAME:-llama3-8b-8192}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production
    volumes:
      - ./bot-service:/app
    networks:
      - expenses-network
    restart: unless-stopped

  # üìä Celery Flower (Monitoring)
  celery-flower:
    build:
      context: ./bot-service
      dockerfile: Dockerfile
    container_name: celery-flower
    command: celery -A app.core.celery_worker:celery_app flower --port=5555 --broker=redis://redis:6379/0
    depends_on:
      - redis
      - bot-service
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    ports:
      - "5556:5555"
    networks:
      - expenses-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  expenses-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
