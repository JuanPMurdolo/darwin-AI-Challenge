services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: expenses_db
      POSTGRES_USER: expenses_user
      POSTGRES_PASSWORD: expenses_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./scripts:/docker-entrypoint-initdb.d/scripts
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U expenses_user -d expenses_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  bot-service:
    build:
      context: ./bot-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - DATABASE_URL=postgresql+asyncpg://expenses_user:expenses_pass@postgres:5432/expenses_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  celery-worker:
    build:
      context: ./bot-service
      dockerfile: celery.dockerfile
    environment:
      - DATABASE_URL=postgresql+asyncpg://expenses_user:expenses_pass@postgres:5432/expenses_db
      - REDIS_URL=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - GROQ_API_KEY=${GROQ_API_KEY:-}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      bot-service:
        condition: service_healthy

  celery-flower:
    build:
      context: ./bot-service
      dockerfile: Dockerfile
    ports:
      - "5556:5556"
    environment:
      - DATABASE_URL=postgresql+asyncpg://expenses_user:expenses_pass@postgres:5432/expenses_db
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: ["celery", "-A", "app.core.celery_worker", "flower", "--port=5556"]

  frontend:
    build:
      context: ./frontend-bot-service
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8001
      - NEXT_PUBLIC_APP_URL=http://localhost:3000
    depends_on:
      bot-service:
        condition: service_healthy

  connector-service:
    build:
      context: ./connector-service
    ports:
      - "3001:3000"
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN:-}
      - BOT_SERVICE_URL=http://bot-service:8001
      - PORT=3000
    depends_on:
      bot-service:
        condition: service_healthy

volumes:
  postgres_data:
